<?xml version="1.0" encoding="UTF-8"?>
<project xmlns="http://maven.apache.org/POM/4.0.0"
         xmlns:xsi="http://www.w3.org/2001/XMLSchema-instance"
         xsi:schemaLocation="http://maven.apache.org/POM/4.0.0 http://maven.apache.org/xsd/maven-4.0.0.xsd">
    <modelVersion>4.0.0</modelVersion>

    <parent>
        <groupId>me.concision.unnamed</groupId>
        <artifactId>unpacker</artifactId>
        <version>2.0.0-SNAPSHOT</version>
    </parent>

    <groupId>me.concision.unnamed.unpacker</groupId>
    <artifactId>cli</artifactId>
    <version>2.0.0-SNAPSHOT</version>

    <description>A command-line application that automates the data extraction process for humans and upstream applications</description>

    <dependencies>
        <!-- Unpacker I/O API: Manipulate package streams -->
        <dependency>
            <groupId>me.concision.unnamed.unpacker</groupId>
            <artifactId>api</artifactId>
            <version>${project.version}</version>
            <scope>compile</scope>
        </dependency>
        <!-- Argparse4J: Command line argument parsing -->
        <dependency>
            <groupId>net.sourceforge.argparse4j</groupId>
            <artifactId>argparse4j</artifactId>
            <version>0.8.1</version>
            <scope>compile</scope>
        </dependency>
        <!-- HTTPClient: Performing HTTP requests -->
        <dependency>
            <groupId>org.apache.httpcomponents</groupId>
            <artifactId>httpclient</artifactId>
            <version>4.5.12</version>
            <scope>compile</scope>
        </dependency>
        <!-- compress: wrapped LZMA compression API -->
        <dependency>
            <groupId>org.apache.commons</groupId>
            <artifactId>commons-compress</artifactId>
            <version>1.20</version>
            <scope>compile</scope>
        </dependency>
        <!-- xz: underlying LZMA decompression implementation -->
        <dependency>
            <groupId>org.tukaani</groupId>
            <artifactId>xz</artifactId>
            <version>1.8</version>
            <scope>compile</scope>
        </dependency>
        <!-- JNA: Win32 API Support -->
        <dependency>
            <groupId>net.java.dev.jna</groupId>
            <artifactId>jna-platform</artifactId>
            <version>5.6.0</version>
            <scope>compile</scope>
        </dependency>
        <!-- PECOFF4J: Parsing Windows PE file formats -->
        <dependency>
            <groupId>com.kichik.pecoff4j</groupId>
            <artifactId>pecoff4j</artifactId>
            <version>0.3.1</version>
            <scope>compile</scope>
        </dependency>
    </dependencies>

    <build>
        <plugins>
            <!-- Compile sources -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-compiler-plugin</artifactId>
                <version>3.8.1</version>
                <executions>
                    <!-- Disable default phase due to fixed id and position in lifecycle -->
                    <execution>
                        <id>default-compile</id>
                        <phase>none</phase>
                        <!-- specify source/target for IDE integration -->
                        <configuration>
                            <source>9</source>
                            <target>9</target>
                        </configuration>
                    </execution>
                    <!-- Compile project with Java 9 to ensure module-info.java is valid -->
                    <execution>
                        <id>module-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <source>9</source>
                            <release>9</release>
                            <jdkToolchain>
                                <version>9</version>
                            </jdkToolchain>
                        </configuration>
                    </execution>
                    <!-- Recompile as Java 8 to overwrite Java 9 class files, except module-info.java -->
                    <execution>
                        <id>jdk8-compile</id>
                        <goals>
                            <goal>compile</goal>
                        </goals>
                        <configuration>
                            <source>8</source>
                            <target>8</target>
                            <jdkToolchain>
                                <version>[1.8,9)</version>
                            </jdkToolchain>
                            <excludes>
                                <exclude>module-info.java</exclude>
                            </excludes>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Shade dependencies -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-shade-plugin</artifactId>
                <version>3.2.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>shade</goal>
                        </goals>
                        <configuration>
                            <finalName>${project.parent.name}</finalName>
                            <shadedArtifactAttached>false</shadedArtifactAttached>
                            <createDependencyReducedPom>false</createDependencyReducedPom>
                            <minimizeJar>true</minimizeJar>
                            <transformers>
                                <!-- Specify entrypoint -->
                                <transformer implementation="org.apache.maven.plugins.shade.resource.ManifestResourceTransformer">
                                    <manifestEntries>
                                        <Main-Class>me.concision.unnamed.unpacker.cli.UnpackerCmd</Main-Class>
                                    </manifestEntries>
                                </transformer>
                            </transformers>
                            <filters>
                                <!-- Required by httpclient -->
                                <filter>
                                    <artifact>commons-logging:*</artifact>
                                    <includes>
                                        <include>**</include>
                                    </includes>
                                </filter>
                                <!-- Filter various other resources -->
                                <filter>
                                    <artifact>*:*</artifact>
                                    <excludes>
                                        <!-- Strip module-info from dependencies (e.g. META-INF/versions/*/module-info.class) -->
                                        <exclude>**/module-info.class</exclude>
                                        <!-- Strip classes in META-INF due to strange jlink error -->
                                        <exclude>**/META-INF/versions/**/*</exclude>
                                    </excludes>
                                </filter>
                            </filters>
                        </configuration>
                    </execution>
                </executions>
            </plugin>

            <!-- Add module-info.class into built product -->
            <plugin>
                <groupId>org.apache.maven.plugins</groupId>
                <artifactId>maven-antrun-plugin</artifactId>
                <version>3.0.0</version>
                <executions>
                    <execution>
                        <phase>package</phase>
                        <goals>
                            <goal>run</goal>
                        </goals>
                        <configuration>
                            <target>
                                <zip
                                        basedir="${project.build.directory}/classes"
                                        includes="module-info.class"
                                        destfile="${project.build.directory}/unpacker.jar"
                                        update="true"
                                />
                            </target>
                        </configuration>
                    </execution>
                </executions>
            </plugin>
        </plugins>
    </build>

    <profiles>
        <!-- Skip Windows executable generator during Docker builds -->
        <profile>
            <id>non-docker</id>
            <activation>
                <!-- activate if DOCKER environment variable is NOT present -->
                <property>
                    <name>env.DOCKER</name>
                    <value>!true</value>
                </property>
            </activation>
            <build>
                <plugins>
                    <!-- Compile to executable -->
                    <plugin>
                        <groupId>com.akathist.maven.plugins.launch4j</groupId>
                        <artifactId>launch4j-maven-plugin</artifactId>
                        <version>1.7.25</version>
                        <executions>
                            <execution>
                                <id>l4j-gui</id>
                                <phase>package</phase>
                                <goals>
                                    <goal>launch4j</goal>
                                </goals>
                                <configuration>
                                    <!-- Build from ProGuard output -->
                                    <jar>${project.build.directory}/${project.parent.name}.jar</jar>
                                    <outfile>${project.build.directory}/${project.parent.name}.exe</outfile>
                                    <icon>launch4j/therox.ico</icon>
                                    <versionInfo>
                                        <originalFilename>${parent.name}.exe</originalFilename>
                                        <fileVersion>${windows.version}</fileVersion>
                                        <txtFileVersion>${project.version}</txtFileVersion>
                                        <fileDescription>${project.description}</fileDescription>
                                        <companyName>None</companyName>
                                        <copyright>None</copyright>
                                        <productVersion>${windows.version}</productVersion>
                                        <txtProductVersion>${project.version}</txtProductVersion>
                                        <productName>${project.name}</productName>
                                        <internalName>${project.name}</internalName>
                                        <language>ENGLISH_US</language>
                                    </versionInfo>
                                    <classPath>
                                        <mainClass>me.concision.unnamed.unpacker.cli.UnpackerCmd</mainClass>
                                        <!-- dependencies are already shaded, prevent leaking dependency info -->
                                        <addDependencies>false</addDependencies>
                                    </classPath>
                                    <!-- JRE 8 required -->
                                    <jre>
                                        <minVersion>1.8.0</minVersion>
                                    </jre>
                                    <headerType>console</headerType>
                                    <errTitle>${project.name}</errTitle>
                                    <messages>
                                        <startupErr>An error occurred while bootstrapping ${project.parent.name}</startupErr>
                                        <jreVersionErr>JDK 1.8 or higher is required</jreVersionErr>
                                        <launcherErr>An exception occurred with Launch4j</launcherErr>
                                    </messages>
                                </configuration>
                            </execution>
                        </executions>
                    </plugin>
                </plugins>
            </build>
        </profile>
    </profiles>
</project>
